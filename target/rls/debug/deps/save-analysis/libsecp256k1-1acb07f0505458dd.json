{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2","program":"/Users/psyto/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","secp256k1","/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"rand\"","--cfg","feature=\"serde\"","--cfg","feature=\"std\"","-C","metadata=1acb07f0505458dd","-C","extra-filename=-1acb07f0505458dd","--out-dir","/Users/psyto/bitcoinaddress/target/rls/debug/deps","-L","dependency=/Users/psyto/bitcoinaddress/target/rls/debug/deps","--extern","rand=/Users/psyto/bitcoinaddress/target/rls/debug/deps/librand-6281c7003c0bc1e2.rmeta","--extern","secp256k1_sys=/Users/psyto/bitcoinaddress/target/rls/debug/deps/libsecp256k1_sys-e57bf1ca06e8b6a4.rmeta","--extern","serde=/Users/psyto/bitcoinaddress/target/rls/debug/deps/libserde-7841acd827f78491.rmeta","--cap-lints","allow","-L","native=/Users/psyto/bitcoinaddress/target/rls/debug/build/secp256k1-sys-3f064ebd2d5fd60b/out","--error-format=json","--sysroot","/Users/psyto/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/psyto/bitcoinaddress/target/rls/debug/deps/libsecp256k1-1acb07f0505458dd.rmeta"},"prelude":{"crate_id":{"name":"secp256k1","disambiguator":[1852541131463969929,9056834896880801468]},"crate_root":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src","external_crates":[{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9054049529852543209,5756799355281213394]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[649336883146201894,3308516238322163950]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1154582834482060450,16344204990542480537]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9212379515936652129,17808485286264063370]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[13327579764654116281,14306064291630426625]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17773251733480933597,18239998491734583498]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8567743581675804787,15655200220621371766]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15115520782807859583,9813785573872252500]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[1572943810868196833,3902827232285166711]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[6290371580101917419,15395902185345451181]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[2934540361684350378,924291485644145262]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[9277678418438935259,15657907931940784437]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5423566938548125357,18340948646597872466]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[489208416821938960,3305070343783546974]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":15,"id":{"name":"secp256k1_sys","disambiguator":[11088271791608258129,1873975945781815814]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":16,"id":{"name":"rand","disambiguator":[395892021374234185,1064478726190868828]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":17,"id":{"name":"rand_jitter","disambiguator":[11078657560512594344,17733300915765700113]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":18,"id":{"name":"rand_core","disambiguator":[14972185475016688217,4829067704538365308]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":19,"id":{"name":"libc","disambiguator":[5364323589538582654,3734074580269012205]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":20,"id":{"name":"rand_isaac","disambiguator":[5653612450662948795,10104157594726512601]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":21,"id":{"name":"rand_core","disambiguator":[11678193436686305453,4269424246353451168]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":22,"id":{"name":"rand_chacha","disambiguator":[3826065443228742458,5155484327027165206]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":23,"id":{"name":"rand_hc","disambiguator":[12474291726026726451,14421314129749265039]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":24,"id":{"name":"rand_pcg","disambiguator":[8666753100084548047,7205364743767113514]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":25,"id":{"name":"rand_xorshift","disambiguator":[8948341451235452764,12017183554195113651]}},{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","num":26,"id":{"name":"serde","disambiguator":[18291311150515165872,17678841506294606175]}}],"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":502,"byte_end":40897,"line_start":16,"line_end":1139,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":0},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":5870,"byte_end":5883,"line_start":148,"line_end":148,"column_start":9,"column_end":22},"alias_span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":5887,"byte_end":5890,"line_start":148,"line_end":148,"column_start":26,"column_end":29},"name":"ffi","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":227},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":6444,"byte_end":6453,"line_start":169,"line_end":169,"column_start":14,"column_end":23},"alias_span":null,"name":"SecretKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":513},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":6468,"byte_end":6477,"line_start":170,"line_end":170,"column_start":14,"column_end":23},"alias_span":null,"name":"PublicKey","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":6496,"byte_end":6497,"line_start":171,"line_end":171,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"Signing, Verification, Context","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":502,"byte_end":40897,"line_start":16,"line_end":1139,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":13},{"krate":0,"index":17},{"krate":0,"index":137},{"krate":0,"index":150},{"krate":0,"index":209},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":549},{"krate":0,"index":561},{"krate":0,"index":559},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":562},{"krate":0,"index":569},{"krate":0,"index":566},{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":332},{"krate":0,"index":343},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":358},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":604},{"krate":0,"index":362},{"krate":0,"index":366},{"krate":0,"index":606},{"krate":0,"index":635},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":627},{"krate":0,"index":625},{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":413},{"krate":0,"index":418},{"krate":0,"index":421}],"decl_id":null,"docs":" # Secp256k1\n Rust bindings for Pieter Wuille's secp256k1 library, which is used for\n fast and accurate manipulation of ECDSA signatures on the secp256k1\n curve. Such signatures are used extensively by the Bitcoin network\n and its derivatives.","sig":null,"attributes":[{"value":"! # Secp256k1","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":502,"byte_end":517,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"! Rust bindings for Pieter Wuille's secp256k1 library, which is used for","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":518,"byte_end":592,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"! fast and accurate manipulation of ECDSA signatures on the secp256k1","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":593,"byte_end":664,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"! curve. Such signatures are used extensively by the Bitcoin network","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":665,"byte_end":735,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"! and its derivatives.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":736,"byte_end":760,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":761,"byte_end":764,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! To minimize dependencies, some functions are feature-gated. To generate","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":765,"byte_end":840,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"! random keys or to re-randomize a context object, compile with the \"rand\"","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":841,"byte_end":917,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"! feature. To de/serialize objects with serde, compile with \"serde\".","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":918,"byte_end":988,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":989,"byte_end":992,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! Where possible, the bindings use the Rust type system to ensure that","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":993,"byte_end":1065,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"! API usage errors are impossible. For example, the library uses context","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":1066,"byte_end":1140,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"! objects that contain precomputation tables which are created on object","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":1141,"byte_end":1215,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"! construction. Since this is a slow operation (10+ milliseconds, vs ~50","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":1216,"byte_end":1290,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"! microseconds for typical crypto operations, on a 2.70 Ghz i7-6820HQ)","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":1291,"byte_end":1363,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"! the tables are optional, giving a performance boost for users who only","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":1364,"byte_end":1438,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"! care about signing, only care about verification, or only care about","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":1439,"byte_end":1511,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"! parsing. In the upstream library, if you attempt to sign a message using","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":1512,"byte_end":1588,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"! a context that does not support this, it will trigger an assertion","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":1589,"byte_end":1659,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"! failure and terminate the program. In `rust-secp256k1`, this is caught","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":1660,"byte_end":1734,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"! at compile-time; in fact, it is impossible to compile code that will","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":1735,"byte_end":1807,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"! trigger any assertion failures in the upstream library.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":1808,"byte_end":1867,"line_start":37,"line_end":37,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":1868,"byte_end":1871,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":1872,"byte_end":1883,"line_start":39,"line_end":39,"column_start":1,"column_end":12}},{"value":"! extern crate secp256k1;","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":1884,"byte_end":1911,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"! # #[cfg(feature=\"rand\")]","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":1912,"byte_end":1940,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"! extern crate rand;","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":1941,"byte_end":1963,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":1964,"byte_end":1967,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! #","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":1968,"byte_end":1973,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"! # fn main() {","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":1974,"byte_end":1991,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"! # #[cfg(feature=\"rand\")] {","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":1992,"byte_end":2022,"line_start":46,"line_end":46,"column_start":1,"column_end":31}},{"value":"! use rand::OsRng;","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2023,"byte_end":2043,"line_start":47,"line_end":47,"column_start":1,"column_end":21}},{"value":"! use secp256k1::{Secp256k1, Message};","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2044,"byte_end":2084,"line_start":48,"line_end":48,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2085,"byte_end":2088,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! let secp = Secp256k1::new();","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2089,"byte_end":2121,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"! let mut rng = OsRng::new().expect(\"OsRng\");","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2122,"byte_end":2169,"line_start":51,"line_end":51,"column_start":1,"column_end":48}},{"value":"! let (secret_key, public_key) = secp.generate_keypair(&mut rng);","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2170,"byte_end":2237,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"! let message = Message::from_slice(&[0xab; 32]).expect(\"32 bytes\");","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2238,"byte_end":2308,"line_start":53,"line_end":53,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2309,"byte_end":2312,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! let sig = secp.sign(&message, &secret_key);","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2313,"byte_end":2360,"line_start":55,"line_end":55,"column_start":1,"column_end":48}},{"value":"! assert!(secp.verify(&message, &sig, &public_key).is_ok());","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2361,"byte_end":2423,"line_start":56,"line_end":56,"column_start":1,"column_end":63}},{"value":"! # } }","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2424,"byte_end":2433,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"! ```","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2434,"byte_end":2441,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2442,"byte_end":2445,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! The above code requires `rust-secp256k1` to be compiled with the `rand`","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2446,"byte_end":2521,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"! feature enabled, to get access to [`generate_keypair`](struct.Secp256k1.html#method.generate_keypair)","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2522,"byte_end":2627,"line_start":61,"line_end":61,"column_start":1,"column_end":106}},{"value":"! Alternately, keys can be parsed from slices, like","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2628,"byte_end":2681,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2682,"byte_end":2685,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2686,"byte_end":2697,"line_start":64,"line_end":64,"column_start":1,"column_end":12}},{"value":"! # fn main() {","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2698,"byte_end":2715,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"! use self::secp256k1::{Secp256k1, Message, SecretKey, PublicKey};","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2716,"byte_end":2784,"line_start":66,"line_end":66,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2785,"byte_end":2788,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! let secp = Secp256k1::new();","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2789,"byte_end":2821,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"! let secret_key = SecretKey::from_slice(&[0xcd; 32]).expect(\"32 bytes, within curve order\");","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2822,"byte_end":2917,"line_start":69,"line_end":69,"column_start":1,"column_end":96}},{"value":"! let public_key = PublicKey::from_secret_key(&secp, &secret_key);","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2918,"byte_end":2986,"line_start":70,"line_end":70,"column_start":1,"column_end":69}},{"value":"! let message = Message::from_slice(&[0xab; 32]).expect(\"32 bytes\");","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":2987,"byte_end":3057,"line_start":71,"line_end":71,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3058,"byte_end":3061,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! let sig = secp.sign(&message, &secret_key);","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3062,"byte_end":3109,"line_start":73,"line_end":73,"column_start":1,"column_end":48}},{"value":"! assert!(secp.verify(&message, &sig, &public_key).is_ok());","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3110,"byte_end":3172,"line_start":74,"line_end":74,"column_start":1,"column_end":63}},{"value":"! # }","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3173,"byte_end":3180,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3181,"byte_end":3188,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3189,"byte_end":3192,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! Users who only want to verify signatures can use a cheaper context, like so:","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3193,"byte_end":3273,"line_start":78,"line_end":78,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3274,"byte_end":3277,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3278,"byte_end":3289,"line_start":80,"line_end":80,"column_start":1,"column_end":12}},{"value":"! # fn main() {","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3290,"byte_end":3307,"line_start":81,"line_end":81,"column_start":1,"column_end":18}},{"value":"! use secp256k1::{Secp256k1, Message, Signature, PublicKey};","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3308,"byte_end":3370,"line_start":82,"line_end":82,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3371,"byte_end":3374,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"! let secp = Secp256k1::verification_only();","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3375,"byte_end":3421,"line_start":84,"line_end":84,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3422,"byte_end":3425,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"! let public_key = PublicKey::from_slice(&[","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3426,"byte_end":3471,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"!     0x02,","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3472,"byte_end":3485,"line_start":87,"line_end":87,"column_start":1,"column_end":14}},{"value":"!     0xc6, 0x6e, 0x7d, 0x89, 0x66, 0xb5, 0xc5, 0x55,","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3486,"byte_end":3541,"line_start":88,"line_end":88,"column_start":1,"column_end":56}},{"value":"!     0xaf, 0x58, 0x05, 0x98, 0x9d, 0xa9, 0xfb, 0xf8,","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3542,"byte_end":3597,"line_start":89,"line_end":89,"column_start":1,"column_end":56}},{"value":"!     0xdb, 0x95, 0xe1, 0x56, 0x31, 0xce, 0x35, 0x8c,","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3598,"byte_end":3653,"line_start":90,"line_end":90,"column_start":1,"column_end":56}},{"value":"!     0x3a, 0x17, 0x10, 0xc9, 0x62, 0x67, 0x90, 0x63,","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3654,"byte_end":3709,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"! ]).expect(\"public keys must be 33 or 65 bytes, serialized according to SEC 2\");","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3710,"byte_end":3793,"line_start":92,"line_end":92,"column_start":1,"column_end":84}},{"value":"!","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3794,"byte_end":3797,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! let message = Message::from_slice(&[","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3798,"byte_end":3838,"line_start":94,"line_end":94,"column_start":1,"column_end":41}},{"value":"!     0xaa, 0xdf, 0x7d, 0xe7, 0x82, 0x03, 0x4f, 0xbe,","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3839,"byte_end":3894,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"!     0x3d, 0x3d, 0xb2, 0xcb, 0x13, 0xc0, 0xcd, 0x91,","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3895,"byte_end":3950,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"!     0xbf, 0x41, 0xcb, 0x08, 0xfa, 0xc7, 0xbd, 0x61,","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":3951,"byte_end":4006,"line_start":97,"line_end":97,"column_start":1,"column_end":56}},{"value":"!     0xd5, 0x44, 0x53, 0xcf, 0x6e, 0x82, 0xb4, 0x50,","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":4007,"byte_end":4062,"line_start":98,"line_end":98,"column_start":1,"column_end":56}},{"value":"! ]).expect(\"messages must be 32 bytes and are expected to be hashes\");","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":4063,"byte_end":4136,"line_start":99,"line_end":99,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":4137,"byte_end":4140,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! let sig = Signature::from_compact(&[","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":4141,"byte_end":4181,"line_start":101,"line_end":101,"column_start":1,"column_end":41}},{"value":"!     0xdc, 0x4d, 0xc2, 0x64, 0xa9, 0xfe, 0xf1, 0x7a,","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":4182,"byte_end":4237,"line_start":102,"line_end":102,"column_start":1,"column_end":56}},{"value":"!     0x3f, 0x25, 0x34, 0x49, 0xcf, 0x8c, 0x39, 0x7a,","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":4238,"byte_end":4293,"line_start":103,"line_end":103,"column_start":1,"column_end":56}},{"value":"!     0xb6, 0xf1, 0x6f, 0xb3, 0xd6, 0x3d, 0x86, 0x94,","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":4294,"byte_end":4349,"line_start":104,"line_end":104,"column_start":1,"column_end":56}},{"value":"!     0x0b, 0x55, 0x86, 0x82, 0x3d, 0xfd, 0x02, 0xae,","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":4350,"byte_end":4405,"line_start":105,"line_end":105,"column_start":1,"column_end":56}},{"value":"!     0x3b, 0x46, 0x1b, 0xb4, 0x33, 0x6b, 0x5e, 0xcb,","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":4406,"byte_end":4461,"line_start":106,"line_end":106,"column_start":1,"column_end":56}},{"value":"!     0xae, 0xfd, 0x66, 0x27, 0xaa, 0x92, 0x2e, 0xfc,","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":4462,"byte_end":4517,"line_start":107,"line_end":107,"column_start":1,"column_end":56}},{"value":"!     0x04, 0x8f, 0xec, 0x0c, 0x88, 0x1c, 0x10, 0xc4,","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":4518,"byte_end":4573,"line_start":108,"line_end":108,"column_start":1,"column_end":56}},{"value":"!     0xc9, 0x42, 0x8f, 0xca, 0x69, 0xc1, 0x32, 0xa2,","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":4574,"byte_end":4629,"line_start":109,"line_end":109,"column_start":1,"column_end":56}},{"value":"! ]).expect(\"compact signatures are 64 bytes; DER signatures are 68-72 bytes\");","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":4630,"byte_end":4711,"line_start":110,"line_end":110,"column_start":1,"column_end":82}},{"value":"!","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":4712,"byte_end":4715,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"! assert!(secp.verify(&message, &sig, &public_key).is_ok());","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":4716,"byte_end":4778,"line_start":112,"line_end":112,"column_start":1,"column_end":63}},{"value":"! # }","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":4779,"byte_end":4786,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":4787,"byte_end":4794,"line_start":114,"line_end":114,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":4795,"byte_end":4798,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"! Observe that the same code using, say [`signing_only`](struct.Secp256k1.html#method.signing_only)","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":4799,"byte_end":4900,"line_start":116,"line_end":116,"column_start":1,"column_end":102}},{"value":"! to generate a context would simply not compile.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":4901,"byte_end":4952,"line_start":117,"line_end":117,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":4953,"byte_end":4956,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"crate_type = \"lib\"","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":4958,"byte_end":4980,"line_start":120,"line_end":120,"column_start":1,"column_end":23}},{"value":"crate_type = \"rlib\"","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":4981,"byte_end":5004,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"crate_type = \"dylib\"","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":5005,"byte_end":5029,"line_start":122,"line_end":122,"column_start":1,"column_end":25}},{"value":"crate_name = \"secp256k1\"","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":5030,"byte_end":5058,"line_start":123,"line_end":123,"column_start":1,"column_end":29}},{"value":"deny(non_upper_case_globals)","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":5082,"byte_end":5114,"line_start":126,"line_end":126,"column_start":1,"column_end":33}},{"value":"deny(non_camel_case_types)","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":5115,"byte_end":5145,"line_start":127,"line_end":127,"column_start":1,"column_end":31}},{"value":"deny(non_snake_case)","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":5146,"byte_end":5170,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"deny(unused_mut)","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":5171,"byte_end":5191,"line_start":129,"line_end":129,"column_start":1,"column_end":21}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":5192,"byte_end":5214,"line_start":130,"line_end":130,"column_start":1,"column_end":23}},{"value":"allow(bare_trait_objects)","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":5452,"byte_end":5481,"line_start":135,"line_end":135,"column_start":1,"column_end":30}},{"value":"allow(ellipsis_inclusive_range_patterns)","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":5482,"byte_end":5526,"line_start":136,"line_end":136,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":30},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":44266,"byte_end":44273,"line_start":14,"line_end":14,"column_start":18,"column_end":25},"name":"Context","qualname":"::context::Context","value":"Context: private::Sealed","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"decl_id":null,"docs":" A trait for all kinds of Context's that Lets you define the exact flags and a function to deallocate memory.\n It shouldn't be possible to implement this for types outside this crate.\n","sig":null,"attributes":[{"value":"/ A trait for all kinds of Context's that Lets you define the exact flags and a function to deallocate memory.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":44059,"byte_end":44171,"line_start":12,"line_end":12,"column_start":1,"column_end":113}},{"value":"/ It shouldn't be possible to implement this for types outside this crate.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":44172,"byte_end":44248,"line_start":13,"line_end":13,"column_start":1,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":31},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":44331,"byte_end":44336,"line_start":16,"line_end":16,"column_start":11,"column_end":16},"name":"FLAGS","qualname":"::context::Context::FLAGS","value":"c_uint","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Flags for the ffi.\n","sig":null,"attributes":[{"value":"/ Flags for the ffi.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":44298,"byte_end":44320,"line_start":15,"line_end":15,"column_start":5,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":32},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":44403,"byte_end":44414,"line_start":18,"line_end":18,"column_start":11,"column_end":22},"name":"DESCRIPTION","qualname":"::context::Context::DESCRIPTION","value":"&'static str","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" A constant description of the context.\n","sig":null,"attributes":[{"value":"/ A constant description of the context.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":44350,"byte_end":44392,"line_start":17,"line_end":17,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":44517,"byte_end":44527,"line_start":20,"line_end":20,"column_start":15,"column_end":25},"name":"deallocate","qualname":"::context::Context::deallocate","value":"fn (ptr: *mut [u8]) -> ()","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" A function to deallocate the memory when the context is dropped.\n","sig":null,"attributes":[{"value":"/ A function to deallocate the memory when the context is dropped.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":44434,"byte_end":44502,"line_start":19,"line_end":19,"column_start":5,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":34},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":44647,"byte_end":44654,"line_start":24,"line_end":24,"column_start":11,"column_end":18},"name":"Signing","qualname":"::context::Signing","value":"Signing: Context","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for indicating that an instance of `Secp256k1` can be used for signing.\n","sig":null,"attributes":[{"value":"/ Marker trait for indicating that an instance of `Secp256k1` can be used for signing.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":44548,"byte_end":44636,"line_start":23,"line_end":23,"column_start":1,"column_end":89}}]},{"kind":"Trait","id":{"krate":0,"index":35},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":44772,"byte_end":44784,"line_start":27,"line_end":27,"column_start":11,"column_end":23},"name":"Verification","qualname":"::context::Verification","value":"Verification: Context","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for indicating that an instance of `Secp256k1` can be used for verification.\n","sig":null,"attributes":[{"value":"/ Marker trait for indicating that an instance of `Secp256k1` can be used for verification.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":44668,"byte_end":44761,"line_start":26,"line_end":26,"column_start":1,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":36},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":44900,"byte_end":44920,"line_start":30,"line_end":30,"column_start":12,"column_end":32},"name":"SignOnlyPreallocated","qualname":"::context::SignOnlyPreallocated","value":"SignOnlyPreallocated {  }","parent":null,"children":[{"krate":0,"index":38}],"decl_id":null,"docs":" Represents the set of capabilities needed for signing with a user preallocated memory.\n","sig":null,"attributes":[{"value":"/ Represents the set of capabilities needed for signing with a user preallocated memory.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":44798,"byte_end":44888,"line_start":29,"line_end":29,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":39},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":45075,"byte_end":45097,"line_start":35,"line_end":35,"column_start":12,"column_end":34},"name":"VerifyOnlyPreallocated","qualname":"::context::VerifyOnlyPreallocated","value":"VerifyOnlyPreallocated {  }","parent":null,"children":[{"krate":0,"index":41}],"decl_id":null,"docs":" Represents the set of capabilities needed for verification with a user preallocated memory.\n","sig":null,"attributes":[{"value":"/ Represents the set of capabilities needed for verification with a user preallocated memory.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":44968,"byte_end":45063,"line_start":34,"line_end":34,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":42},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":45232,"byte_end":45247,"line_start":40,"line_end":40,"column_start":12,"column_end":27},"name":"AllPreallocated","qualname":"::context::AllPreallocated","value":"AllPreallocated {  }","parent":null,"children":[{"krate":0,"index":44}],"decl_id":null,"docs":" Represents the set of all capabilities with a user preallocated memory.\n","sig":null,"attributes":[{"value":"/ Represents the set of all capabilities with a user preallocated memory.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":45145,"byte_end":45220,"line_start":39,"line_end":39,"column_start":1,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":47},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":45557,"byte_end":45563,"line_start":49,"line_end":49,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::context::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":59},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":45991,"byte_end":45999,"line_start":65,"line_end":65,"column_start":14,"column_end":22},"name":"SignOnly","qualname":"::context::std_only::SignOnly","value":"SignOnly::{}","parent":null,"children":[],"decl_id":null,"docs":" Represents the set of capabilities needed for signing.\n","sig":null,"attributes":[{"value":"/ Represents the set of capabilities needed for signing.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":45919,"byte_end":45977,"line_start":64,"line_end":64,"column_start":5,"column_end":63}}]},{"kind":"Enum","id":{"krate":0,"index":60},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":46085,"byte_end":46095,"line_start":68,"line_end":68,"column_start":14,"column_end":24},"name":"VerifyOnly","qualname":"::context::std_only::VerifyOnly","value":"VerifyOnly::{}","parent":null,"children":[],"decl_id":null,"docs":" Represents the set of capabilities needed for verification.\n","sig":null,"attributes":[{"value":"/ Represents the set of capabilities needed for verification.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":46008,"byte_end":46071,"line_start":67,"line_end":67,"column_start":5,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":61},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":46161,"byte_end":46164,"line_start":71,"line_end":71,"column_start":14,"column_end":17},"name":"All","qualname":"::context::std_only::All","value":"All::{}","parent":null,"children":[],"decl_id":null,"docs":" Represents the set of all capabilities.\n","sig":null,"attributes":[{"value":"/ Represents the set of all capabilities.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":46104,"byte_end":46147,"line_start":70,"line_end":70,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":47226,"byte_end":47233,"line_start":108,"line_end":108,"column_start":16,"column_end":23},"name":"gen_new","qualname":"<Secp256k1<C>>::gen_new","value":"fn () -> Secp256k1<C>","parent":null,"children":[],"decl_id":null,"docs":" Lets you create a context in a generic manner(sign/verify/all)\n","sig":null,"attributes":[{"value":"/ Lets you create a context in a generic manner(sign/verify/all)","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":47144,"byte_end":47210,"line_start":107,"line_end":107,"column_start":9,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":47710,"byte_end":47713,"line_start":121,"line_end":121,"column_start":16,"column_end":19},"name":"new","qualname":"<Secp256k1<All>>::new","value":"fn () -> Secp256k1<All>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context with all capabilities\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context with all capabilities","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":47637,"byte_end":47694,"line_start":120,"line_end":120,"column_start":9,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":47910,"byte_end":47922,"line_start":128,"line_end":128,"column_start":16,"column_end":28},"name":"signing_only","qualname":"<Secp256k1<SignOnly>>::signing_only","value":"fn () -> Secp256k1<SignOnly>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context that can only be used for signing\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context that can only be used for signing","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":47825,"byte_end":47894,"line_start":127,"line_end":127,"column_start":9,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":48131,"byte_end":48148,"line_start":135,"line_end":135,"column_start":16,"column_end":33},"name":"verification_only","qualname":"<Secp256k1<VerifyOnly>>::verification_only","value":"fn () -> Secp256k1<VerifyOnly>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context that can only be used for verification\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context that can only be used for verification","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":48041,"byte_end":48115,"line_start":134,"line_end":134,"column_start":9,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":50008,"byte_end":50028,"line_start":194,"line_end":194,"column_start":12,"column_end":32},"name":"preallocated_gen_new","qualname":"<Secp256k1<C>>::preallocated_gen_new","value":"fn (buf: &'buf mut [u8]) -> Result<Secp256k1<C>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Lets you create a context with preallocated buffer in a generic manner(sign/verify/all)\n","sig":null,"attributes":[{"value":"/ Lets you create a context with preallocated buffer in a generic manner(sign/verify/all)","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":49905,"byte_end":49996,"line_start":193,"line_end":193,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":50612,"byte_end":50628,"line_start":212,"line_end":212,"column_start":12,"column_end":28},"name":"preallocated_new","qualname":"<Secp256k1<AllPreallocated>>::preallocated_new","value":"fn (buf: &'buf mut [u8]) -> Result<Secp256k1<AllPreallocated<'buf>>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context with all capabilities\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context with all capabilities","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":50543,"byte_end":50600,"line_start":211,"line_end":211,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":50870,"byte_end":50886,"line_start":216,"line_end":216,"column_start":12,"column_end":28},"name":"preallocate_size","qualname":"<Secp256k1<AllPreallocated>>::preallocate_size","value":"fn () -> usize","parent":null,"children":[],"decl_id":null,"docs":" Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for a context\n","sig":null,"attributes":[{"value":"/ Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for a context","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":50758,"byte_end":50858,"line_start":215,"line_end":215,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":51592,"byte_end":51604,"line_start":231,"line_end":231,"column_start":19,"column_end":31},"name":"from_raw_all","qualname":"<Secp256k1<AllPreallocated>>::from_raw_all","value":"fn (raw_ctx: *mut ffi::Context) -> ManuallyDrop<Secp256k1<AllPreallocated<'buf>>>","parent":null,"children":[],"decl_id":null,"docs":" Create a context from a raw context.","sig":null,"attributes":[{"value":"/ Create a context from a raw context.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":50948,"byte_end":50988,"line_start":220,"line_end":220,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":50993,"byte_end":50996,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":51001,"byte_end":51013,"line_start":222,"line_end":222,"column_start":5,"column_end":17}},{"value":"/ This is highly unsafe, due to the number of conditions that aren't checked.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":51018,"byte_end":51097,"line_start":223,"line_end":223,"column_start":5,"column_end":84}},{"value":"/ * `raw_ctx` needs to be a valid Secp256k1 context pointer.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":51102,"byte_end":51164,"line_start":224,"line_end":224,"column_start":5,"column_end":67}},{"value":"/ that was generated by *exactly* the same code/version of the libsecp256k1 used here.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":51169,"byte_end":51257,"line_start":225,"line_end":225,"column_start":5,"column_end":93}},{"value":"/ * The capabilities (All/SignOnly/VerifyOnly) of the context *must* match the flags passed to libsecp256k1","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":51262,"byte_end":51371,"line_start":226,"line_end":226,"column_start":5,"column_end":114}},{"value":"/ when generating the context.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":51376,"byte_end":51408,"line_start":227,"line_end":227,"column_start":5,"column_end":37}},{"value":"/ * The user must handle the freeing of the context(using the correct functions) by himself.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":51413,"byte_end":51507,"line_start":228,"line_end":228,"column_start":5,"column_end":99}},{"value":"/ * Violating these may lead to Undefined Behavior.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":51512,"byte_end":51565,"line_start":229,"line_end":229,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":51570,"byte_end":51573,"line_start":230,"line_end":230,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":51997,"byte_end":52022,"line_start":242,"line_end":242,"column_start":12,"column_end":37},"name":"preallocated_signing_only","qualname":"<Secp256k1<SignOnlyPreallocated>>::preallocated_signing_only","value":"fn (buf: &'buf mut [u8]) -> Result<Secp256k1<SignOnlyPreallocated<'buf>>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context that can only be used for signing\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context that can only be used for signing","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":51916,"byte_end":51985,"line_start":241,"line_end":241,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":52286,"byte_end":52310,"line_start":248,"line_end":248,"column_start":12,"column_end":36},"name":"preallocate_signing_size","qualname":"<Secp256k1<SignOnlyPreallocated>>::preallocate_signing_size","value":"fn () -> usize","parent":null,"children":[],"decl_id":null,"docs":" Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for the context\n","sig":null,"attributes":[{"value":"/ Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for the context","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":52158,"byte_end":52260,"line_start":246,"line_end":246,"column_start":5,"column_end":107}},{"value":"inline","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":52265,"byte_end":52274,"line_start":247,"line_end":247,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":53050,"byte_end":53073,"line_start":263,"line_end":263,"column_start":19,"column_end":42},"name":"from_raw_signining_only","qualname":"<Secp256k1<SignOnlyPreallocated>>::from_raw_signining_only","value":"fn (raw_ctx: *mut ffi::Context) -> ManuallyDrop<Secp256k1<SignOnlyPreallocated<'buf>>>","parent":null,"children":[],"decl_id":null,"docs":" Create a context from a raw context.","sig":null,"attributes":[{"value":"/ Create a context from a raw context.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":52372,"byte_end":52412,"line_start":252,"line_end":252,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":52417,"byte_end":52420,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":52425,"byte_end":52437,"line_start":254,"line_end":254,"column_start":5,"column_end":17}},{"value":"/ This is highly unsafe, due to the number of conditions that aren't checked.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":52442,"byte_end":52521,"line_start":255,"line_end":255,"column_start":5,"column_end":84}},{"value":"/ * `raw_ctx` needs to be a valid Secp256k1 context pointer.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":52526,"byte_end":52588,"line_start":256,"line_end":256,"column_start":5,"column_end":67}},{"value":"/ that was generated by *exactly* the same code/version of the libsecp256k1 used here.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":52593,"byte_end":52681,"line_start":257,"line_end":257,"column_start":5,"column_end":93}},{"value":"/ * The capabilities (All/SignOnly/VerifyOnly) of the context *must* match the flags passed to libsecp256k1","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":52686,"byte_end":52795,"line_start":258,"line_end":258,"column_start":5,"column_end":114}},{"value":"/ when generating the context.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":52800,"byte_end":52832,"line_start":259,"line_end":259,"column_start":5,"column_end":37}},{"value":"/ * The user must handle the freeing of the context(using the correct functions) by himself.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":52837,"byte_end":52931,"line_start":260,"line_end":260,"column_start":5,"column_end":99}},{"value":"/ * This list *is not* exhaustive, and any violation may lead to Undefined Behavior.,","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":52936,"byte_end":53023,"line_start":261,"line_end":261,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":53028,"byte_end":53031,"line_start":262,"line_end":262,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":53478,"byte_end":53508,"line_start":274,"line_end":274,"column_start":12,"column_end":42},"name":"preallocated_verification_only","qualname":"<Secp256k1<VerifyOnlyPreallocated>>::preallocated_verification_only","value":"fn (buf: &'buf mut [u8]) -> Result<Secp256k1<VerifyOnlyPreallocated<'buf>>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context that can only be used for verification\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context that can only be used for verification","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":53392,"byte_end":53466,"line_start":273,"line_end":273,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":53774,"byte_end":53803,"line_start":280,"line_end":280,"column_start":12,"column_end":41},"name":"preallocate_verification_size","qualname":"<Secp256k1<VerifyOnlyPreallocated>>::preallocate_verification_size","value":"fn () -> usize","parent":null,"children":[],"decl_id":null,"docs":" Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for the context\n","sig":null,"attributes":[{"value":"/ Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for the context","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":53646,"byte_end":53748,"line_start":278,"line_end":278,"column_start":5,"column_end":107}},{"value":"inline","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":53753,"byte_end":53762,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":54543,"byte_end":54569,"line_start":295,"line_end":295,"column_start":19,"column_end":45},"name":"from_raw_verification_only","qualname":"<Secp256k1<VerifyOnlyPreallocated>>::from_raw_verification_only","value":"fn (raw_ctx: *mut ffi::Context) -> ManuallyDrop<Secp256k1<VerifyOnlyPreallocated<'buf>>>","parent":null,"children":[],"decl_id":null,"docs":" Create a context from a raw context.","sig":null,"attributes":[{"value":"/ Create a context from a raw context.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":53865,"byte_end":53905,"line_start":284,"line_end":284,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":53910,"byte_end":53913,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":53918,"byte_end":53930,"line_start":286,"line_end":286,"column_start":5,"column_end":17}},{"value":"/ This is highly unsafe, due to the number of conditions that aren't checked.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":53935,"byte_end":54014,"line_start":287,"line_end":287,"column_start":5,"column_end":84}},{"value":"/ * `raw_ctx` needs to be a valid Secp256k1 context pointer.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":54019,"byte_end":54081,"line_start":288,"line_end":288,"column_start":5,"column_end":67}},{"value":"/ that was generated by *exactly* the same code/version of the libsecp256k1 used here.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":54086,"byte_end":54174,"line_start":289,"line_end":289,"column_start":5,"column_end":93}},{"value":"/ * The capabilities (All/SignOnly/VerifyOnly) of the context *must* match the flags passed to libsecp256k1","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":54179,"byte_end":54288,"line_start":290,"line_end":290,"column_start":5,"column_end":114}},{"value":"/ when generating the context.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":54293,"byte_end":54325,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/ * The user must handle the freeing of the context(using the correct functions) by himself.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":54330,"byte_end":54424,"line_start":292,"line_end":292,"column_start":5,"column_end":99}},{"value":"/ * This list *is not* exhaustive, and any violation may lead to Undefined Behavior.,","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":54429,"byte_end":54516,"line_start":293,"line_end":293,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":54521,"byte_end":54524,"line_start":294,"line_end":294,"column_start":5,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":137},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/constants.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constants","qualname":"::constants","value":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/constants.rs","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148}],"decl_id":null,"docs":" # Constants\n Constants related to the API and the underlying curve\n","sig":null,"attributes":[{"value":"! # Constants","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/constants.rs","byte_start":55334,"byte_end":55349,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"! Constants related to the API and the underlying curve","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/constants.rs","byte_start":55350,"byte_end":55407,"line_start":17,"line_end":17,"column_start":1,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":138},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/constants.rs","byte_start":55456,"byte_end":55468,"line_start":20,"line_end":20,"column_start":11,"column_end":23},"name":"MESSAGE_SIZE","qualname":"::constants::MESSAGE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a message\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of a message","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/constants.rs","byte_start":55409,"byte_end":55445,"line_start":19,"line_end":19,"column_start":1,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":139},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/constants.rs","byte_start":55533,"byte_end":55548,"line_start":23,"line_end":23,"column_start":11,"column_end":26},"name":"SECRET_KEY_SIZE","qualname":"::constants::SECRET_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a secret key\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of a secret key","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/constants.rs","byte_start":55483,"byte_end":55522,"line_start":22,"line_end":22,"column_start":1,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":140},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/constants.rs","byte_start":55625,"byte_end":55640,"line_start":26,"line_end":26,"column_start":11,"column_end":26},"name":"PUBLIC_KEY_SIZE","qualname":"::constants::PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a serialized public key.\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of a serialized public key.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/constants.rs","byte_start":55563,"byte_end":55614,"line_start":25,"line_end":25,"column_start":1,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":141},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/constants.rs","byte_start":55730,"byte_end":55758,"line_start":29,"line_end":29,"column_start":11,"column_end":39},"name":"UNCOMPRESSED_PUBLIC_KEY_SIZE","qualname":"::constants::UNCOMPRESSED_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of an serialized uncompressed public key\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of an serialized uncompressed public key","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/constants.rs","byte_start":55655,"byte_end":55719,"line_start":28,"line_end":28,"column_start":1,"column_end":65}}]},{"kind":"Const","id":{"krate":0,"index":142},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/constants.rs","byte_start":55819,"byte_end":55837,"line_start":32,"line_end":32,"column_start":11,"column_end":29},"name":"MAX_SIGNATURE_SIZE","qualname":"::constants::MAX_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum size of a signature\n","sig":null,"attributes":[{"value":"/ The maximum size of a signature","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/constants.rs","byte_start":55773,"byte_end":55808,"line_start":31,"line_end":31,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":143},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/constants.rs","byte_start":55906,"byte_end":55928,"line_start":35,"line_end":35,"column_start":11,"column_end":33},"name":"COMPACT_SIGNATURE_SIZE","qualname":"::constants::COMPACT_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum size of a compact signature\n","sig":null,"attributes":[{"value":"/ The maximum size of a compact signature","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/constants.rs","byte_start":55852,"byte_end":55895,"line_start":34,"line_end":34,"column_start":1,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":144},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/constants.rs","byte_start":55990,"byte_end":56001,"line_start":38,"line_end":38,"column_start":11,"column_end":22},"name":"CURVE_ORDER","qualname":"::constants::CURVE_ORDER","value":"[u8; 32]","parent":null,"children":[],"decl_id":null,"docs":" The order of the secp256k1 curve\n","sig":null,"attributes":[{"value":"/ The order of the secp256k1 curve","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/constants.rs","byte_start":55943,"byte_end":55979,"line_start":37,"line_end":37,"column_start":1,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":146},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/constants.rs","byte_start":56275,"byte_end":56286,"line_start":46,"line_end":46,"column_start":11,"column_end":22},"name":"GENERATOR_X","qualname":"::constants::GENERATOR_X","value":"[u8; 32]","parent":null,"children":[],"decl_id":null,"docs":" The X coordinate of the generator\n","sig":null,"attributes":[{"value":"/ The X coordinate of the generator","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/constants.rs","byte_start":56227,"byte_end":56264,"line_start":45,"line_end":45,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":148},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/constants.rs","byte_start":56560,"byte_end":56571,"line_start":54,"line_end":54,"column_start":11,"column_end":22},"name":"GENERATOR_Y","qualname":"::constants::GENERATOR_Y","value":"[u8; 32]","parent":null,"children":[],"decl_id":null,"docs":" The Y coordinate of the generator\n","sig":null,"attributes":[{"value":"/ The Y coordinate of the generator","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/constants.rs","byte_start":56512,"byte_end":56549,"line_start":53,"line_end":53,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":150},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ecdh","qualname":"::ecdh","value":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":165},{"krate":0,"index":422},{"krate":0,"index":429},{"krate":0,"index":426},{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":437},{"krate":0,"index":442},{"krate":0,"index":447},{"krate":0,"index":452},{"krate":0,"index":457},{"krate":0,"index":462},{"krate":0,"index":467},{"krate":0,"index":472},{"krate":0,"index":166},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":186},{"krate":0,"index":191},{"krate":0,"index":195}],"decl_id":null,"docs":" # ECDH\n Support for shared secret computations","sig":null,"attributes":[{"value":"! # ECDH","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":57274,"byte_end":57284,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"! Support for shared secret computations","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":57285,"byte_end":57327,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":57328,"byte_end":57331,"line_start":17,"line_end":17,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":422},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":57604,"byte_end":57616,"line_start":29,"line_end":29,"column_start":12,"column_end":24},"name":"SharedSecret","qualname":"::ecdh::SharedSecret","value":"SharedSecret {  }","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":425}],"decl_id":null,"docs":" A tag used for recovering the public key from a compact signature\n","sig":null,"attributes":[{"value":"/ A tag used for recovering the public key from a compact signature","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":57500,"byte_end":57569,"line_start":27,"line_end":27,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":58377,"byte_end":58385,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"capacity","qualname":"<SharedSecret>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the capacity of the underlying data buffer.\n","sig":null,"attributes":[{"value":"/ Get the capacity of the underlying data buffer.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":58314,"byte_end":58365,"line_start":55,"line_end":55,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":58484,"byte_end":58487,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"len","qualname":"<SharedSecret>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the len of the used data.\n","sig":null,"attributes":[{"value":"/ Get the len of the used data.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":58439,"byte_end":58472,"line_start":60,"line_end":60,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":60341,"byte_end":60344,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"new","qualname":"<SharedSecret>::new","value":"fn (point: &PublicKey, scalar: &SecretKey) -> SharedSecret","parent":null,"children":[],"decl_id":null,"docs":" Creates a new shared secret from a pubkey and secret key\n","sig":null,"attributes":[{"value":"/ Creates a new shared secret from a pubkey and secret key","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":60255,"byte_end":60315,"line_start":126,"line_end":126,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":60320,"byte_end":60329,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":62633,"byte_end":62646,"line_start":186,"line_end":186,"column_start":12,"column_end":25},"name":"new_with_hash","qualname":"<SharedSecret>::new_with_hash","value":"fn <F> (point: &PublicKey, scalar: &SecretKey, hash_function: F) -> Result<SharedSecret, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new shared secret from a pubkey and secret key with applied custom hash function\n # Examples\n ```\n # use secp256k1::ecdh::SharedSecret;\n # use secp256k1::{Secp256k1, PublicKey, SecretKey};\n # fn sha2(_a: &[u8], _b: &[u8]) -> [u8; 32] {[0u8; 32]}\n # let secp = Secp256k1::signing_only();\n # let secret_key = SecretKey::from_slice(&[3u8; 32]).unwrap();\n # let secret_key2 = SecretKey::from_slice(&[7u8; 32]).unwrap();\n # let public_key = PublicKey::from_secret_key(&secp, &secret_key2);","sig":null,"attributes":[{"value":"/ Creates a new shared secret from a pubkey and secret key with applied custom hash function","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":61839,"byte_end":61933,"line_start":168,"line_end":168,"column_start":5,"column_end":99}},{"value":"/ # Examples","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":61938,"byte_end":61952,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":61957,"byte_end":61964,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/ # use secp256k1::ecdh::SharedSecret;","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":61969,"byte_end":62009,"line_start":171,"line_end":171,"column_start":5,"column_end":45}},{"value":"/ # use secp256k1::{Secp256k1, PublicKey, SecretKey};","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":62014,"byte_end":62069,"line_start":172,"line_end":172,"column_start":5,"column_end":60}},{"value":"/ # fn sha2(_a: &[u8], _b: &[u8]) -> [u8; 32] {[0u8; 32]}","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":62074,"byte_end":62133,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/ # let secp = Secp256k1::signing_only();","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":62138,"byte_end":62181,"line_start":174,"line_end":174,"column_start":5,"column_end":48}},{"value":"/ # let secret_key = SecretKey::from_slice(&[3u8; 32]).unwrap();","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":62186,"byte_end":62252,"line_start":175,"line_end":175,"column_start":5,"column_end":71}},{"value":"/ # let secret_key2 = SecretKey::from_slice(&[7u8; 32]).unwrap();","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":62257,"byte_end":62324,"line_start":176,"line_end":176,"column_start":5,"column_end":72}},{"value":"/ # let public_key = PublicKey::from_secret_key(&secp, &secret_key2);","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":62329,"byte_end":62400,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":62405,"byte_end":62408,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let secret = SharedSecret::new_with_hash(&public_key, &secret_key, |x,y| {","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":62413,"byte_end":62491,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/     let hash: [u8; 32] = sha2(&x,&y);","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":62496,"byte_end":62537,"line_start":180,"line_end":180,"column_start":5,"column_end":46}},{"value":"/     hash.into()","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":62542,"byte_end":62561,"line_start":181,"line_end":181,"column_start":5,"column_end":24}},{"value":"/ });","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":62566,"byte_end":62573,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":62578,"byte_end":62581,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":62586,"byte_end":62593,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":62598,"byte_end":62621,"line_start":185,"line_end":185,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":64333,"byte_end":64355,"line_start":219,"line_end":219,"column_start":19,"column_end":41},"name":"new_with_hash_no_panic","qualname":"<SharedSecret>::new_with_hash_no_panic","value":"fn <F> (point: &PublicKey, scalar: &SecretKey, hash_function: F) -> Result<SharedSecret, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new shared secret from a pubkey and secret key with applied custom hash function\n Note that this function is the same as [`new_with_hash`]","sig":null,"attributes":[{"value":"/ Creates a new shared secret from a pubkey and secret key with applied custom hash function","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":62918,"byte_end":63012,"line_start":191,"line_end":191,"column_start":5,"column_end":99}},{"value":"/ Note that this function is the same as [`new_with_hash`]","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":63017,"byte_end":63077,"line_start":192,"line_end":192,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":63082,"byte_end":63085,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":63090,"byte_end":63102,"line_start":194,"line_end":194,"column_start":5,"column_end":17}},{"value":"/ The function doesn't wrap the callback with [`catch_unwind`]","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":63107,"byte_end":63171,"line_start":195,"line_end":195,"column_start":5,"column_end":69}},{"value":"/ so if the callback panics it will panic through an FFI boundray which is [`Undefined Behavior`]","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":63176,"byte_end":63275,"line_start":196,"line_end":196,"column_start":5,"column_end":104}},{"value":"/ If possible you should use [`new_with_hash`] which does wrap the callback with [`catch_unwind`] so is safe to use.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":63280,"byte_end":63398,"line_start":197,"line_end":197,"column_start":5,"column_end":123}},{"value":"/","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":63403,"byte_end":63406,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ [`catch_unwind`]: https://doc.rust-lang.org/std/panic/fn.catch_unwind.html","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":63411,"byte_end":63489,"line_start":199,"line_end":199,"column_start":5,"column_end":83}},{"value":"/ [`Undefined Behavior`]: https://doc.rust-lang.org/nomicon/ffi.html#ffi-and-panics","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":63494,"byte_end":63579,"line_start":200,"line_end":200,"column_start":5,"column_end":90}},{"value":"/ [`new_with_hash`]: #method.new_with_hash","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":63584,"byte_end":63628,"line_start":201,"line_end":201,"column_start":5,"column_end":49}},{"value":"/ # Examples","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":63633,"byte_end":63647,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":63652,"byte_end":63659,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use secp256k1::ecdh::SharedSecret;","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":63664,"byte_end":63704,"line_start":204,"line_end":204,"column_start":5,"column_end":45}},{"value":"/ # use secp256k1::{Secp256k1, PublicKey, SecretKey};","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":63709,"byte_end":63764,"line_start":205,"line_end":205,"column_start":5,"column_end":60}},{"value":"/ # fn sha2(_a: &[u8], _b: &[u8]) -> [u8; 32] {[0u8; 32]}","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":63769,"byte_end":63828,"line_start":206,"line_end":206,"column_start":5,"column_end":64}},{"value":"/ # let secp = Secp256k1::signing_only();","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":63833,"byte_end":63876,"line_start":207,"line_end":207,"column_start":5,"column_end":48}},{"value":"/ # let secret_key = SecretKey::from_slice(&[3u8; 32]).unwrap();","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":63881,"byte_end":63947,"line_start":208,"line_end":208,"column_start":5,"column_end":71}},{"value":"/ # let secret_key2 = SecretKey::from_slice(&[7u8; 32]).unwrap();","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":63952,"byte_end":64019,"line_start":209,"line_end":209,"column_start":5,"column_end":72}},{"value":"/ # let public_key = PublicKey::from_secret_key(&secp, &secret_key2);","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":64024,"byte_end":64095,"line_start":210,"line_end":210,"column_start":5,"column_end":76}},{"value":"/ let secret = unsafe { SharedSecret::new_with_hash_no_panic(&public_key, &secret_key, |x,y| {","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":64107,"byte_end":64203,"line_start":212,"line_end":212,"column_start":5,"column_end":101}},{"value":"/     let hash: [u8; 32] = sha2(&x,&y);","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":64208,"byte_end":64249,"line_start":213,"line_end":213,"column_start":5,"column_end":46}},{"value":"/     hash.into()","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":64254,"byte_end":64273,"line_start":214,"line_end":214,"column_start":5,"column_end":24}},{"value":"/ })};","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":64278,"byte_end":64286,"line_start":215,"line_end":215,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":64291,"byte_end":64294,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":64299,"byte_end":64302,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":64307,"byte_end":64314,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":209},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"key","qualname":"::key","value":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":498},{"krate":0,"index":501},{"krate":0,"index":504},{"krate":0,"index":507},{"krate":0,"index":511},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":239},{"krate":0,"index":513},{"krate":0,"index":538},{"krate":0,"index":536},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":527},{"krate":0,"index":521},{"krate":0,"index":519},{"krate":0,"index":516},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":248},{"krate":0,"index":252},{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":259},{"krate":0,"index":276},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":285}],"decl_id":null,"docs":" # Public and secret keys\n","sig":null,"attributes":[{"value":"! # Public and secret keys","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":67987,"byte_end":68015,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":227},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":68326,"byte_end":68335,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"SecretKey","qualname":"::key::SecretKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" Secret 256-bit key used as `x` in an ECDSA signature\n","sig":null,"attributes":[{"value":"/ Secret 256-bit key used as `x` in an ECDSA signature","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":68258,"byte_end":68314,"line_start":29,"line_end":29,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":239},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":69190,"byte_end":69197,"line_start":61,"line_end":61,"column_start":11,"column_end":18},"name":"ONE_KEY","qualname":"::key::ONE_KEY","value":"SecretKey","parent":null,"children":[],"decl_id":null,"docs":" The number 1 encoded as a secret key\n","sig":null,"attributes":[{"value":"/ The number 1 encoded as a secret key","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":69139,"byte_end":69179,"line_start":60,"line_end":60,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":513},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":69590,"byte_end":69599,"line_start":68,"line_end":68,"column_start":12,"column_end":21},"name":"PublicKey","qualname":"::key::PublicKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Secp256k1 public key, used for verification of signatures\n","sig":null,"attributes":[{"value":"/ A Secp256k1 public key, used for verification of signatures","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":69447,"byte_end":69510,"line_start":66,"line_end":66,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":70902,"byte_end":70905,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<SecretKey>::new","value":"fn <R> (rng: &mut R) -> SecretKey","parent":null,"children":[],"decl_id":null,"docs":" Creates a new random secret key. Requires compilation with the \"rand\" feature.\n","sig":null,"attributes":[{"value":"/ Creates a new random secret key. Requires compilation with the \"rand\" feature.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":70754,"byte_end":70836,"line_start":112,"line_end":112,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":70841,"byte_end":70850,"line_start":113,"line_end":113,"column_start":5,"column_end":14}},{"value":"cfg(any (test, feature = \"rand\"))","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":70855,"byte_end":70890,"line_start":114,"line_end":114,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":71370,"byte_end":71380,"line_start":131,"line_end":131,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<SecretKey>::from_slice","value":"fn (data: &[u8]) -> Result<SecretKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `SECRET_KEY_SIZE`-byte slice to a secret key\n","sig":null,"attributes":[{"value":"/ Converts a `SECRET_KEY_SIZE`-byte slice to a secret key","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":71285,"byte_end":71344,"line_start":129,"line_end":129,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":71349,"byte_end":71358,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":72245,"byte_end":72255,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"add_assign","qualname":"<SecretKey>::add_assign","value":"fn (&mut self, other: &[u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds one secret key to another, modulo the curve order. WIll\n return an error if the resulting key would be invalid or if\n the tweak was not a 32-byte length slice.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":72037,"byte_end":72046,"line_start":151,"line_end":151,"column_start":5,"column_end":14}},{"value":"/ Adds one secret key to another, modulo the curve order. WIll","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":72051,"byte_end":72115,"line_start":152,"line_end":152,"column_start":5,"column_end":69}},{"value":"/ return an error if the resulting key would be invalid or if","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":72120,"byte_end":72183,"line_start":153,"line_end":153,"column_start":5,"column_end":68}},{"value":"/ the tweak was not a 32-byte length slice.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":72188,"byte_end":72233,"line_start":154,"line_end":154,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":72971,"byte_end":72981,"line_start":180,"line_end":180,"column_start":12,"column_end":22},"name":"mul_assign","qualname":"<SecretKey>::mul_assign","value":"fn (&mut self, other: &[u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies one secret key by another, modulo the curve order. Will\n return an error if the resulting key would be invalid or if\n the tweak was not a 32-byte length slice.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":72757,"byte_end":72766,"line_start":176,"line_end":176,"column_start":5,"column_end":14}},{"value":"/ Multiplies one secret key by another, modulo the curve order. Will","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":72771,"byte_end":72841,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/ return an error if the resulting key would be invalid or if","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":72846,"byte_end":72909,"line_start":178,"line_end":178,"column_start":5,"column_end":68}},{"value":"/ the tweak was not a 32-byte length slice.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":72914,"byte_end":72959,"line_start":179,"line_end":179,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":73648,"byte_end":73654,"line_start":207,"line_end":207,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<PublicKey>::as_ptr","value":"fn (&self) -> *const ffi::PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw const pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw const pointer suitable for use with FFI functions","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":73555,"byte_end":73622,"line_start":205,"line_end":205,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":73627,"byte_end":73636,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":73823,"byte_end":73833,"line_start":213,"line_end":213,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<PublicKey>::as_mut_ptr","value":"fn (&mut self) -> *mut ffi::PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw mutable pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw mutable pointer suitable for use with FFI functions","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":73728,"byte_end":73797,"line_start":211,"line_end":211,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":73802,"byte_end":73811,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":73984,"byte_end":73999,"line_start":219,"line_end":219,"column_start":12,"column_end":27},"name":"from_secret_key","qualname":"<PublicKey>::from_secret_key","value":"fn <C> (secp: &Secp256k1<C>, sk: &SecretKey) -> PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Creates a new public key from a secret key.\n","sig":null,"attributes":[{"value":"/ Creates a new public key from a secret key.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":73911,"byte_end":73958,"line_start":217,"line_end":217,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":73963,"byte_end":73972,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":74584,"byte_end":74594,"line_start":234,"line_end":234,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<PublicKey>::from_slice","value":"fn (data: &[u8]) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a public key directly from a slice\n","sig":null,"attributes":[{"value":"/ Creates a public key directly from a slice","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":74512,"byte_end":74558,"line_start":232,"line_end":232,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":74563,"byte_end":74572,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":75324,"byte_end":75333,"line_start":257,"line_end":257,"column_start":12,"column_end":21},"name":"serialize","qualname":"<PublicKey>::serialize","value":"fn (&self) -> [u8; constants::PUBLIC_KEY_SIZE]","parent":null,"children":[],"decl_id":null,"docs":" Serialize the key as a byte-encoded pair of values. In compressed form\n the y-coordinate is represented by only a single bit, as x determines\n it up to one bit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":75120,"byte_end":75129,"line_start":253,"line_end":253,"column_start":5,"column_end":14}},{"value":"/ Serialize the key as a byte-encoded pair of values. In compressed form","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":75134,"byte_end":75208,"line_start":254,"line_end":254,"column_start":5,"column_end":79}},{"value":"/ the y-coordinate is represented by only a single bit, as x determines","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":75213,"byte_end":75286,"line_start":255,"line_end":255,"column_start":5,"column_end":78}},{"value":"/ it up to one bit.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":75291,"byte_end":75312,"line_start":256,"line_end":256,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":75998,"byte_end":76020,"line_start":276,"line_end":276,"column_start":12,"column_end":34},"name":"serialize_uncompressed","qualname":"<PublicKey>::serialize_uncompressed","value":"fn (&self) -> [u8; constants::UNCOMPRESSED_PUBLIC_KEY_SIZE]","parent":null,"children":[],"decl_id":null,"docs":" Serialize the key as a byte-encoded pair of values, in uncompressed form\n","sig":null,"attributes":[{"value":"/ Serialize the key as a byte-encoded pair of values, in uncompressed form","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":75910,"byte_end":75986,"line_start":275,"line_end":275,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":76853,"byte_end":76867,"line_start":298,"line_end":298,"column_start":12,"column_end":26},"name":"add_exp_assign","qualname":"<PublicKey>::add_exp_assign","value":"fn <C> (&mut self, secp: &Secp256k1<C>, other: &[u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds the pk corresponding to `other` to the pk `self` in place\n Will return an error if the resulting key would be invalid or\n if the tweak was not a 32-byte length slice.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":76638,"byte_end":76647,"line_start":294,"line_end":294,"column_start":5,"column_end":14}},{"value":"/ Adds the pk corresponding to `other` to the pk `self` in place","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":76652,"byte_end":76718,"line_start":295,"line_end":295,"column_start":5,"column_end":71}},{"value":"/ Will return an error if the resulting key would be invalid or","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":76723,"byte_end":76788,"line_start":296,"line_end":296,"column_start":5,"column_end":70}},{"value":"/ if the tweak was not a 32-byte length slice.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":76793,"byte_end":76841,"line_start":297,"line_end":297,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":77572,"byte_end":77582,"line_start":320,"line_end":320,"column_start":12,"column_end":22},"name":"mul_assign","qualname":"<PublicKey>::mul_assign","value":"fn <C> (&mut self, secp: &Secp256k1<C>, other: &[u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Muliplies the pk `self` in place by the scalar `other`\n Will return an error if the resulting key would be invalid or\n if the tweak was not a 32-byte length slice.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":77365,"byte_end":77374,"line_start":316,"line_end":316,"column_start":5,"column_end":14}},{"value":"/ Muliplies the pk `self` in place by the scalar `other`","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":77379,"byte_end":77437,"line_start":317,"line_end":317,"column_start":5,"column_end":63}},{"value":"/ Will return an error if the resulting key would be invalid or","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":77442,"byte_end":77507,"line_start":318,"line_end":318,"column_start":5,"column_end":70}},{"value":"/ if the tweak was not a 32-byte length slice.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":77512,"byte_end":77560,"line_start":319,"line_end":319,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":78275,"byte_end":78282,"line_start":341,"line_end":341,"column_start":12,"column_end":19},"name":"combine","qualname":"<PublicKey>::combine","value":"fn (&self, other: &PublicKey) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds a second key to this one, returning the sum. Returns an error if\n the result would be the point at infinity, i.e. we are adding this point\n to its own negation\n","sig":null,"attributes":[{"value":"/ Adds a second key to this one, returning the sum. Returns an error if","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":78081,"byte_end":78154,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/ the result would be the point at infinity, i.e. we are adding this point","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":78159,"byte_end":78235,"line_start":339,"line_end":339,"column_start":5,"column_end":81}},{"value":"/ to its own negation","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":78240,"byte_end":78263,"line_start":340,"line_end":340,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":549},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":6640,"byte_end":6649,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"Signature","qualname":"::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" An ECDSA signature\n","sig":null,"attributes":[{"value":"/ An ECDSA signature","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":6568,"byte_end":6590,"line_start":176,"line_end":176,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":562},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":6733,"byte_end":6752,"line_start":182,"line_end":182,"column_start":12,"column_end":31},"name":"SerializedSignature","qualname":"::SerializedSignature","value":"SerializedSignature {  }","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":565}],"decl_id":null,"docs":" A DER serialized Signature\n","sig":null,"attributes":[{"value":"/ A DER serialized Signature","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":6668,"byte_end":6698,"line_start":180,"line_end":180,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":321},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":7645,"byte_end":7662,"line_start":217,"line_end":217,"column_start":11,"column_end":28},"name":"ThirtyTwoByteHash","qualname":"::ThirtyTwoByteHash","value":"ThirtyTwoByteHash","parent":null,"children":[{"krate":0,"index":322}],"decl_id":null,"docs":" Trait describing something that promises to be a 32-byte random number; in particular,\n it has negligible probability of being zero or overflowing the group order. Such objects\n may be converted to `Message`s without any error paths.\n","sig":null,"attributes":[{"value":"/ Trait describing something that promises to be a 32-byte random number; in particular,","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":7391,"byte_end":7481,"line_start":214,"line_end":214,"column_start":1,"column_end":91}},{"value":"/ it has negligible probability of being zero or overflowing the group order. Such objects","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":7482,"byte_end":7574,"line_start":215,"line_end":215,"column_start":1,"column_end":93}},{"value":"/ may be converted to `Message`s without any error paths.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":7575,"byte_end":7634,"line_start":216,"line_end":216,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":7721,"byte_end":7728,"line_start":219,"line_end":219,"column_start":8,"column_end":15},"name":"into_32","qualname":"::ThirtyTwoByteHash::into_32","value":"fn (self) -> [u8; 32]","parent":{"krate":0,"index":321},"children":[],"decl_id":null,"docs":" Converts the object into a 32-byte array\n","sig":null,"attributes":[{"value":"/ Converts the object into a 32-byte array","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":7669,"byte_end":7713,"line_start":218,"line_end":218,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":8016,"byte_end":8024,"line_start":229,"line_end":229,"column_start":12,"column_end":20},"name":"capacity","qualname":"<SerializedSignature>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the capacity of the underlying data buffer.\n","sig":null,"attributes":[{"value":"/ Get the capacity of the underlying data buffer.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":7953,"byte_end":8004,"line_start":228,"line_end":228,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":8123,"byte_end":8126,"line_start":234,"line_end":234,"column_start":12,"column_end":15},"name":"len","qualname":"<SerializedSignature>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the len of the used data.\n","sig":null,"attributes":[{"value":"/ Get the len of the used data.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":8078,"byte_end":8111,"line_start":233,"line_end":233,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":8403,"byte_end":8415,"line_start":245,"line_end":245,"column_start":12,"column_end":24},"name":"to_signature","qualname":"<SerializedSignature>::to_signature","value":"fn (&self) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Convert the serialized signature into the Signature struct.\n (This DER deserializes it)\n","sig":null,"attributes":[{"value":"/ Convert the serialized signature into the Signature struct.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":8293,"byte_end":8356,"line_start":243,"line_end":243,"column_start":5,"column_end":68}},{"value":"/ (This DER deserializes it)","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":8361,"byte_end":8391,"line_start":244,"line_end":244,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":8594,"byte_end":8608,"line_start":251,"line_end":251,"column_start":12,"column_end":26},"name":"from_signature","qualname":"<SerializedSignature>::from_signature","value":"fn (sig: &Signature) -> SerializedSignature","parent":null,"children":[],"decl_id":null,"docs":" Create a SerializedSignature from a Signature.\n (this DER serializes it)\n","sig":null,"attributes":[{"value":"/ Create a SerializedSignature from a Signature.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":8499,"byte_end":8549,"line_start":249,"line_end":249,"column_start":5,"column_end":55}},{"value":"/ (this DER serializes it)","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":8554,"byte_end":8582,"line_start":250,"line_end":250,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":8733,"byte_end":8741,"line_start":256,"line_end":256,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SerializedSignature>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the space is zero.\n","sig":null,"attributes":[{"value":"/ Check if the space is zero.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":8690,"byte_end":8721,"line_start":255,"line_end":255,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":8875,"byte_end":8883,"line_start":262,"line_end":262,"column_start":12,"column_end":20},"name":"from_der","qualname":"<Signature>::from_der","value":"fn (data: &[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a DER-encoded byte slice to a signature\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":8797,"byte_end":8806,"line_start":260,"line_end":260,"column_start":1,"column_end":10}},{"value":"/ Converts a DER-encoded byte slice to a signature","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":8811,"byte_end":8863,"line_start":261,"line_end":261,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":9506,"byte_end":9518,"line_start":283,"line_end":283,"column_start":12,"column_end":24},"name":"from_compact","qualname":"<Signature>::from_compact","value":"fn (data: &[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a 64-byte compact-encoded byte slice to a signature\n","sig":null,"attributes":[{"value":"/ Converts a 64-byte compact-encoded byte slice to a signature","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":9430,"byte_end":9494,"line_start":282,"line_end":282,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":10352,"byte_end":10364,"line_start":307,"line_end":307,"column_start":12,"column_end":24},"name":"from_der_lax","qualname":"<Signature>::from_der_lax","value":"fn (data: &[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a \"lax DER\"-encoded byte slice to a signature. This is basically\n only useful for validating signatures in the Bitcoin blockchain from before\n 2016. It should never be used in new applications. This library does not\n support serializing to this \"format\"\n","sig":null,"attributes":[{"value":"/ Converts a \"lax DER\"-encoded byte slice to a signature. This is basically","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":10053,"byte_end":10130,"line_start":303,"line_end":303,"column_start":5,"column_end":82}},{"value":"/ only useful for validating signatures in the Bitcoin blockchain from before","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":10135,"byte_end":10214,"line_start":304,"line_end":304,"column_start":5,"column_end":84}},{"value":"/ 2016. It should never be used in new applications. This library does not","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":10219,"byte_end":10295,"line_start":305,"line_end":305,"column_start":5,"column_end":81}},{"value":"/ support serializing to this \"format\"","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":10300,"byte_end":10340,"line_start":306,"line_end":306,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":12093,"byte_end":12104,"line_start":343,"line_end":343,"column_start":12,"column_end":23},"name":"normalize_s","qualname":"<Signature>::normalize_s","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Normalizes a signature to a \"low S\" form. In ECDSA, signatures are\n of the form (r, s) where r and s are numbers lying in some finite\n field. The verification equation will pass for (r, s) iff it passes\n for (r, -s), so it is possible to ``modify'' signatures in transit\n by flipping the sign of s. This does not constitute a forgery since\n the signed message still cannot be changed, but for some applications,\n changing even the signature itself can be a problem. Such applications\n require a \"strong signature\". It is believed that ECDSA is a strong\n signature except for this ambiguity in the sign of s, so to accommodate\n these applications libsecp256k1 will only accept signatures for which\n s is in the lower half of the field range. This eliminates the\n ambiguity.","sig":null,"attributes":[{"value":"/ Normalizes a signature to a \"low S\" form. In ECDSA, signatures are","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":10908,"byte_end":10978,"line_start":326,"line_end":326,"column_start":5,"column_end":75}},{"value":"/ of the form (r, s) where r and s are numbers lying in some finite","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":10983,"byte_end":11052,"line_start":327,"line_end":327,"column_start":5,"column_end":74}},{"value":"/ field. The verification equation will pass for (r, s) iff it passes","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":11057,"byte_end":11128,"line_start":328,"line_end":328,"column_start":5,"column_end":76}},{"value":"/ for (r, -s), so it is possible to ``modify'' signatures in transit","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":11133,"byte_end":11203,"line_start":329,"line_end":329,"column_start":5,"column_end":75}},{"value":"/ by flipping the sign of s. This does not constitute a forgery since","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":11208,"byte_end":11279,"line_start":330,"line_end":330,"column_start":5,"column_end":76}},{"value":"/ the signed message still cannot be changed, but for some applications,","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":11284,"byte_end":11358,"line_start":331,"line_end":331,"column_start":5,"column_end":79}},{"value":"/ changing even the signature itself can be a problem. Such applications","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":11363,"byte_end":11437,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ require a \"strong signature\". It is believed that ECDSA is a strong","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":11442,"byte_end":11513,"line_start":333,"line_end":333,"column_start":5,"column_end":76}},{"value":"/ signature except for this ambiguity in the sign of s, so to accommodate","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":11518,"byte_end":11593,"line_start":334,"line_end":334,"column_start":5,"column_end":80}},{"value":"/ these applications libsecp256k1 will only accept signatures for which","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":11598,"byte_end":11671,"line_start":335,"line_end":335,"column_start":5,"column_end":78}},{"value":"/ s is in the lower half of the field range. This eliminates the","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":11676,"byte_end":11742,"line_start":336,"line_end":336,"column_start":5,"column_end":71}},{"value":"/ ambiguity.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":11747,"byte_end":11761,"line_start":337,"line_end":337,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":11766,"byte_end":11769,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ However, for some systems, signatures with high s-values are considered","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":11774,"byte_end":11849,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ valid. (For example, parsing the historic Bitcoin blockchain requires","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":11854,"byte_end":11927,"line_start":340,"line_end":340,"column_start":5,"column_end":78}},{"value":"/ this.) For these applications we provide this normalization function,","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":11932,"byte_end":12005,"line_start":341,"line_end":341,"column_start":5,"column_end":78}},{"value":"/ which ensures that the s value lies in the lower half of its range.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":12010,"byte_end":12081,"line_start":342,"line_end":342,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":12555,"byte_end":12561,"line_start":357,"line_end":357,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<Signature>::as_ptr","value":"fn (&self) -> *const ffi::Signature","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw pointer suitable for use with FFI functions","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":12468,"byte_end":12529,"line_start":355,"line_end":355,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":12534,"byte_end":12543,"line_start":356,"line_end":356,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":12730,"byte_end":12740,"line_start":363,"line_end":363,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<Signature>::as_mut_ptr","value":"fn (&mut self) -> *mut ffi::Signature","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw mutable pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw mutable pointer suitable for use with FFI functions","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":12635,"byte_end":12704,"line_start":361,"line_end":361,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":12709,"byte_end":12718,"line_start":362,"line_end":362,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":12886,"byte_end":12899,"line_start":369,"line_end":369,"column_start":12,"column_end":25},"name":"serialize_der","qualname":"<Signature>::serialize_der","value":"fn (&self) -> SerializedSignature","parent":null,"children":[],"decl_id":null,"docs":" Serializes the signature in DER format\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":12818,"byte_end":12827,"line_start":367,"line_end":367,"column_start":5,"column_end":14}},{"value":"/ Serializes the signature in DER format","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":12832,"byte_end":12874,"line_start":368,"line_end":368,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":13453,"byte_end":13470,"line_start":387,"line_end":387,"column_start":12,"column_end":29},"name":"serialize_compact","qualname":"<Signature>::serialize_compact","value":"fn (&self) -> [u8; 64]","parent":null,"children":[],"decl_id":null,"docs":" Serializes the signature in compact format\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":13381,"byte_end":13390,"line_start":385,"line_end":385,"column_start":5,"column_end":14}},{"value":"/ Serializes the signature in compact format","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":13395,"byte_end":13441,"line_start":386,"line_end":386,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":15148,"byte_end":15155,"line_start":449,"line_end":449,"column_start":12,"column_end":19},"name":"Message","qualname":"::Message","value":"","parent":null,"children":[],"decl_id":null,"docs":" A (hashed) message input to an ECDSA signature\n","sig":null,"attributes":[{"value":"/ A (hashed) message input to an ECDSA signature","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":15086,"byte_end":15136,"line_start":448,"line_end":448,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":15382,"byte_end":15392,"line_start":456,"line_end":456,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Message>::from_slice","value":"fn (data: &[u8]) -> Result<Message, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `MESSAGE_SIZE`-byte slice to a message object\n","sig":null,"attributes":[{"value":"/ Converts a `MESSAGE_SIZE`-byte slice to a message object","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":15296,"byte_end":15356,"line_start":454,"line_end":454,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":15361,"byte_end":15370,"line_start":455,"line_end":455,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":607},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":16142,"byte_end":16160,"line_start":483,"line_end":483,"column_start":5,"column_end":23},"name":"IncorrectSignature","qualname":"::Error::IncorrectSignature","value":"Error::IncorrectSignature","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Signature failed verification\n","sig":null,"attributes":[{"value":"/ Signature failed verification","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":16104,"byte_end":16137,"line_start":482,"line_end":482,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":609},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":16281,"byte_end":16295,"line_start":486,"line_end":486,"column_start":5,"column_end":19},"name":"InvalidMessage","qualname":"::Error::InvalidMessage","value":"Error::InvalidMessage","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Badly sized message (\"messages\" are actually fixed-sized digests; see the `MESSAGE_SIZE`\n constant)\n","sig":null,"attributes":[{"value":"/ Badly sized message (\"messages\" are actually fixed-sized digests; see the `MESSAGE_SIZE`","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":16166,"byte_end":16258,"line_start":484,"line_end":484,"column_start":5,"column_end":97}},{"value":"/ constant)","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":16263,"byte_end":16276,"line_start":485,"line_end":485,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":611},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":16324,"byte_end":16340,"line_start":488,"line_end":488,"column_start":5,"column_end":21},"name":"InvalidPublicKey","qualname":"::Error::InvalidPublicKey","value":"Error::InvalidPublicKey","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Bad public key\n","sig":null,"attributes":[{"value":"/ Bad public key","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":16301,"byte_end":16319,"line_start":487,"line_end":487,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":613},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":16368,"byte_end":16384,"line_start":490,"line_end":490,"column_start":5,"column_end":21},"name":"InvalidSignature","qualname":"::Error::InvalidSignature","value":"Error::InvalidSignature","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Bad signature\n","sig":null,"attributes":[{"value":"/ Bad signature","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":16346,"byte_end":16363,"line_start":489,"line_end":489,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":615},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":16413,"byte_end":16429,"line_start":492,"line_end":492,"column_start":5,"column_end":21},"name":"InvalidSecretKey","qualname":"::Error::InvalidSecretKey","value":"Error::InvalidSecretKey","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Bad secret key\n","sig":null,"attributes":[{"value":"/ Bad secret key","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":16390,"byte_end":16408,"line_start":491,"line_end":491,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":617},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":16459,"byte_end":16476,"line_start":494,"line_end":494,"column_start":5,"column_end":22},"name":"InvalidRecoveryId","qualname":"::Error::InvalidRecoveryId","value":"Error::InvalidRecoveryId","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Bad recovery id\n","sig":null,"attributes":[{"value":"/ Bad recovery id","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":16435,"byte_end":16454,"line_start":493,"line_end":493,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":619},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":16537,"byte_end":16549,"line_start":496,"line_end":496,"column_start":5,"column_end":17},"name":"InvalidTweak","qualname":"::Error::InvalidTweak","value":"Error::InvalidTweak","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Invalid tweak for add_*_assign or mul_*_assign\n","sig":null,"attributes":[{"value":"/ Invalid tweak for add_*_assign or mul_*_assign","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":16482,"byte_end":16532,"line_start":495,"line_end":495,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":621},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":16634,"byte_end":16649,"line_start":498,"line_end":498,"column_start":5,"column_end":20},"name":"NotEnoughMemory","qualname":"::Error::NotEnoughMemory","value":"Error::NotEnoughMemory","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Didn't pass enough memory to context creation with preallocated memory\n","sig":null,"attributes":[{"value":"/ Didn't pass enough memory to context creation with preallocated memory","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":16555,"byte_end":16629,"line_start":497,"line_end":497,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":623},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":16690,"byte_end":16706,"line_start":500,"line_end":500,"column_start":5,"column_end":21},"name":"CallbackPanicked","qualname":"::Error::CallbackPanicked","value":"Error::CallbackPanicked","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" The callback has panicked.\n","sig":null,"attributes":[{"value":"/ The callback has panicked.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":16655,"byte_end":16685,"line_start":499,"line_end":499,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":606},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":16092,"byte_end":16097,"line_start":481,"line_end":481,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"Error::{IncorrectSignature, InvalidMessage, InvalidPublicKey, InvalidSignature, InvalidSecretKey, InvalidRecoveryId, InvalidTweak, NotEnoughMemory, CallbackPanicked}","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":617},{"krate":0,"index":619},{"krate":0,"index":621},{"krate":0,"index":623}],"decl_id":null,"docs":" An ECDSA error\n","sig":null,"attributes":[{"value":"/ An ECDSA error","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":16019,"byte_end":16037,"line_start":479,"line_end":479,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":375},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":17871,"byte_end":17880,"line_start":533,"line_end":533,"column_start":12,"column_end":21},"name":"Secp256k1","qualname":"::Secp256k1","value":"Secp256k1 {  }","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379}],"decl_id":null,"docs":" The secp256k1 engine, used to execute all signature operations\n","sig":null,"attributes":[{"value":"/ The secp256k1 engine, used to execute all signature operations","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":17793,"byte_end":17859,"line_start":532,"line_end":532,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":19722,"byte_end":19725,"line_start":602,"line_end":602,"column_start":12,"column_end":15},"name":"ctx","qualname":"<Secp256k1<C>>::ctx","value":"fn (&self) -> &*mut ffi::Context","parent":null,"children":[],"decl_id":null,"docs":" Getter for the raw pointer to the underlying secp256k1 context. This\n shouldn't be needed with normal usage of the library. It enables\n extending the Secp256k1 with more cryptographic algorithms outside of\n this crate.\n","sig":null,"attributes":[{"value":"/ Getter for the raw pointer to the underlying secp256k1 context. This","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":19467,"byte_end":19539,"line_start":598,"line_end":598,"column_start":5,"column_end":77}},{"value":"/ shouldn't be needed with normal usage of the library. It enables","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":19544,"byte_end":19612,"line_start":599,"line_end":599,"column_start":5,"column_end":73}},{"value":"/ extending the Secp256k1 with more cryptographic algorithms outside of","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":19617,"byte_end":19690,"line_start":600,"line_end":600,"column_start":5,"column_end":78}},{"value":"/ this crate.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":19695,"byte_end":19710,"line_start":601,"line_end":601,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":19900,"byte_end":19920,"line_start":607,"line_end":607,"column_start":12,"column_end":32},"name":"preallocate_size_gen","qualname":"<Secp256k1<C>>::preallocate_size_gen","value":"fn () -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the required memory for a preallocated context buffer in a generic manner(sign/verify/all)\n","sig":null,"attributes":[{"value":"/ Returns the required memory for a preallocated context buffer in a generic manner(sign/verify/all)","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":19786,"byte_end":19888,"line_start":606,"line_end":606,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":20264,"byte_end":20273,"line_start":615,"line_end":615,"column_start":12,"column_end":21},"name":"randomize","qualname":"<Secp256k1<C>>::randomize","value":"fn <R> (&mut self, rng: &mut R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" (Re)randomizes the Secp256k1 context for cheap sidechannel resistance;\n see comment in libsecp256k1 commit d2275795f by Gregory Maxwell. Requires\n compilation with \"rand\" feature.\n","sig":null,"attributes":[{"value":"/ (Re)randomizes the Secp256k1 context for cheap sidechannel resistance;","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":20015,"byte_end":20089,"line_start":611,"line_end":611,"column_start":5,"column_end":79}},{"value":"/ see comment in libsecp256k1 commit d2275795f by Gregory Maxwell. Requires","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":20094,"byte_end":20171,"line_start":612,"line_end":612,"column_start":5,"column_end":82}},{"value":"/ compilation with \"rand\" feature.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":20176,"byte_end":20212,"line_start":613,"line_end":613,"column_start":5,"column_end":41}},{"value":"cfg(any (test, feature = \"rand\"))","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":20217,"byte_end":20252,"line_start":614,"line_end":614,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":21310,"byte_end":21314,"line_start":638,"line_end":638,"column_start":12,"column_end":16},"name":"sign","qualname":"<Secp256k1<C>>::sign","value":"fn (&self, msg: &Message, sk: &key::SecretKey) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce\n Requires a signing-capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":21174,"byte_end":21254,"line_start":636,"line_end":636,"column_start":5,"column_end":85}},{"value":"/ Requires a signing-capable context.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":21259,"byte_end":21298,"line_start":637,"line_end":637,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":22263,"byte_end":22279,"line_start":659,"line_end":659,"column_start":12,"column_end":28},"name":"generate_keypair","qualname":"<Secp256k1<C>>::generate_keypair","value":"fn <R> (&self, rng: &mut R) -> (key::SecretKey, key::PublicKey)","parent":null,"children":[],"decl_id":null,"docs":" Generates a random keypair. Convenience function for `key::SecretKey::new`\n and `key::PublicKey::from_secret_key`; call those functions directly for\n batch key generation. Requires a signing-capable context. Requires compilation\n with the \"rand\" feature.\n","sig":null,"attributes":[{"value":"/ Generates a random keypair. Convenience function for `key::SecretKey::new`","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":21918,"byte_end":21996,"line_start":653,"line_end":653,"column_start":5,"column_end":83}},{"value":"/ and `key::PublicKey::from_secret_key`; call those functions directly for","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":22001,"byte_end":22077,"line_start":654,"line_end":654,"column_start":5,"column_end":81}},{"value":"/ batch key generation. Requires a signing-capable context. Requires compilation","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":22082,"byte_end":22164,"line_start":655,"line_end":655,"column_start":5,"column_end":87}},{"value":"/ with the \"rand\" feature.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":22169,"byte_end":22197,"line_start":656,"line_end":656,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":22202,"byte_end":22211,"line_start":657,"line_end":657,"column_start":5,"column_end":14}},{"value":"cfg(any (test, feature = \"rand\"))","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":22216,"byte_end":22251,"line_start":658,"line_end":658,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":22942,"byte_end":22948,"line_start":674,"line_end":674,"column_start":12,"column_end":18},"name":"verify","qualname":"<Secp256k1<C>>::verify","value":"fn (&self, msg: &Message, sig: &Signature, pk: &key::PublicKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Checks that `sig` is a valid ECDSA signature for `msg` using the public\n key `pubkey`. Returns `Ok(true)` on success. Note that this function cannot\n be used for Bitcoin consensus checking since there may exist signatures\n which OpenSSL would verify but not libsecp256k1, or vice-versa. Requires a\n verify-capable context.\n","sig":null,"attributes":[{"value":"/ Checks that `sig` is a valid ECDSA signature for `msg` using the public","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":22562,"byte_end":22637,"line_start":668,"line_end":668,"column_start":5,"column_end":80}},{"value":"/ key `pubkey`. Returns `Ok(true)` on success. Note that this function cannot","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":22642,"byte_end":22721,"line_start":669,"line_end":669,"column_start":5,"column_end":84}},{"value":"/ be used for Bitcoin consensus checking since there may exist signatures","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":22726,"byte_end":22801,"line_start":670,"line_end":670,"column_start":5,"column_end":80}},{"value":"/ which OpenSSL would verify but not libsecp256k1, or vice-versa. Requires a","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":22806,"byte_end":22884,"line_start":671,"line_end":671,"column_start":5,"column_end":83}},{"value":"/ verify-capable context.","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":22889,"byte_end":22916,"line_start":672,"line_end":672,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":22921,"byte_end":22930,"line_start":673,"line_end":673,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":45594,"byte_end":45609,"line_start":51,"line_end":51,"column_start":27,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":45645,"byte_end":45667,"line_start":52,"line_end":52,"column_start":27,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":45703,"byte_end":45723,"line_start":53,"line_end":53,"column_start":27,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":45804,"byte_end":45812,"line_start":58,"line_end":58,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":45845,"byte_end":45848,"line_start":59,"line_end":59,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":45881,"byte_end":45891,"line_start":60,"line_end":60,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":46190,"byte_end":46198,"line_start":73,"line_end":73,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":46223,"byte_end":46226,"line_start":74,"line_end":74,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":46257,"byte_end":46267,"line_start":76,"line_end":76,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":46297,"byte_end":46300,"line_start":77,"line_end":77,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":46333,"byte_end":46341,"line_start":79,"line_end":79,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":46592,"byte_end":46602,"line_start":88,"line_end":88,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":46860,"byte_end":46863,"line_start":97,"line_end":97,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":47121,"byte_end":47130,"line_start":106,"line_end":106,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":47612,"byte_end":47621,"line_start":119,"line_end":119,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":47795,"byte_end":47804,"line_start":126,"line_end":126,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":48009,"byte_end":48018,"line_start":133,"line_end":133,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":48249,"byte_end":48258,"line_start":140,"line_end":140,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":48369,"byte_end":48378,"line_start":146,"line_end":146,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":48862,"byte_end":48882,"line_start":159,"line_end":159,"column_start":24,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":48915,"byte_end":48930,"line_start":160,"line_end":160,"column_start":24,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":48969,"byte_end":48991,"line_start":162,"line_end":162,"column_start":29,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":49029,"byte_end":49044,"line_start":163,"line_end":163,"column_start":29,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":49085,"byte_end":49105,"line_start":165,"line_end":165,"column_start":31,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":49338,"byte_end":49360,"line_start":174,"line_end":174,"column_start":31,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":49600,"byte_end":49615,"line_start":183,"line_end":183,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":49886,"byte_end":49895,"line_start":192,"line_end":192,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":50504,"byte_end":50513,"line_start":210,"line_end":210,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":51872,"byte_end":51881,"line_start":240,"line_end":240,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":53346,"byte_end":53355,"line_start":272,"line_end":272,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":57951,"byte_end":57963,"line_start":40,"line_end":40,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":58718,"byte_end":58730,"line_start":72,"line_end":72,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":58852,"byte_end":58864,"line_start":78,"line_end":78,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":58954,"byte_end":58966,"line_start":84,"line_end":84,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":60236,"byte_end":60248,"line_start":125,"line_end":125,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":201},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":68490,"byte_end":68499,"line_start":34,"line_end":34,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":68688,"byte_end":68697,"line_start":43,"line_end":43,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":68826,"byte_end":68835,"line_start":49,"line_end":49,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":69641,"byte_end":69650,"line_start":70,"line_end":70,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":69872,"byte_end":69881,"line_start":80,"line_end":80,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":70010,"byte_end":70019,"line_start":86,"line_end":86,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":70738,"byte_end":70747,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":73539,"byte_end":73548,"line_start":204,"line_end":204,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":273},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":78816,"byte_end":78825,"line_start":360,"line_end":360,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":79110,"byte_end":79119,"line_start":373,"line_end":373,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":79268,"byte_end":79277,"line_start":381,"line_end":381,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":79581,"byte_end":79590,"line_start":392,"line_end":392,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":79801,"byte_end":79811,"line_start":397,"line_end":397,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":80865,"byte_end":80877,"line_start":426,"line_end":426,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":6814,"byte_end":6823,"line_start":187,"line_end":187,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":6939,"byte_end":6948,"line_start":193,"line_end":193,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":7145,"byte_end":7154,"line_start":203,"line_end":203,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":7756,"byte_end":7775,"line_start":222,"line_end":222,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":8785,"byte_end":8794,"line_start":259,"line_end":259,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":13829,"byte_end":13838,"line_start":401,"line_end":401,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":14120,"byte_end":14129,"line_start":413,"line_end":413,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":14281,"byte_end":14290,"line_start":422,"line_end":422,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":14599,"byte_end":14608,"line_start":434,"line_end":434,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":15282,"byte_end":15289,"line_start":453,"line_end":453,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":15866,"byte_end":15873,"line_start":472,"line_end":472,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":16716,"byte_end":16721,"line_start":503,"line_end":503,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":17556,"byte_end":17561,"line_start":520,"line_end":520,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":17729,"byte_end":17734,"line_start":527,"line_end":527,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":18097,"byte_end":18106,"line_start":540,"line_end":540,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":18242,"byte_end":18251,"line_start":542,"line_end":542,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":18291,"byte_end":18300,"line_start":545,"line_end":545,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":18383,"byte_end":18402,"line_start":549,"line_end":549,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":18564,"byte_end":18583,"line_start":558,"line_end":558,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":18729,"byte_end":18748,"line_start":564,"line_end":564,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":18838,"byte_end":18857,"line_start":570,"line_end":570,"column_start":16,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":18967,"byte_end":18986,"line_start":577,"line_end":577,"column_start":13,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":19015,"byte_end":19024,"line_start":579,"line_end":579,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":19059,"byte_end":19068,"line_start":581,"line_end":581,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":19271,"byte_end":19280,"line_start":590,"line_end":590,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":19447,"byte_end":19456,"line_start":596,"line_end":596,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":21154,"byte_end":21163,"line_start":634,"line_end":634,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":22543,"byte_end":22552,"line_start":667,"line_end":667,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":6345,"byte_end":6354,"line_start":163,"line_end":163,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":137}},{"kind":"Mod","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":6364,"byte_end":6368,"line_start":164,"line_end":164,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":150}},{"kind":"Mod","span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":6378,"byte_end":6381,"line_start":165,"line_end":165,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":209}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":44285,"byte_end":44291,"line_start":14,"line_end":14,"column_start":37,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":47},"to":{"krate":0,"index":30}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":44656,"byte_end":44663,"line_start":24,"line_end":24,"column_start":20,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":30},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":44786,"byte_end":44793,"line_start":27,"line_end":27,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":30},"to":{"krate":0,"index":35}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":45594,"byte_end":45609,"line_start":51,"line_end":51,"column_start":27,"column_end":42},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":42},"to":{"krate":0,"index":47}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":45645,"byte_end":45667,"line_start":52,"line_end":52,"column_start":27,"column_end":49},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":39},"to":{"krate":0,"index":47}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":45703,"byte_end":45723,"line_start":53,"line_end":53,"column_start":27,"column_end":47},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":36},"to":{"krate":0,"index":47}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":45804,"byte_end":45812,"line_start":58,"line_end":58,"column_start":30,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":59},"to":{"krate":0,"index":47}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":45845,"byte_end":45848,"line_start":59,"line_end":59,"column_start":30,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":61},"to":{"krate":0,"index":47}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":45881,"byte_end":45891,"line_start":60,"line_end":60,"column_start":30,"column_end":40},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":60},"to":{"krate":0,"index":47}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":46190,"byte_end":46198,"line_start":73,"line_end":73,"column_start":22,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":59},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":46223,"byte_end":46226,"line_start":74,"line_end":74,"column_start":22,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":61},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":46257,"byte_end":46267,"line_start":76,"line_end":76,"column_start":27,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":60},"to":{"krate":0,"index":35}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":46297,"byte_end":46300,"line_start":77,"line_end":77,"column_start":27,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":61},"to":{"krate":0,"index":35}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":46333,"byte_end":46341,"line_start":79,"line_end":79,"column_start":29,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":59},"to":{"krate":0,"index":30}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":46592,"byte_end":46602,"line_start":88,"line_end":88,"column_start":29,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":60},"to":{"krate":0,"index":30}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":46860,"byte_end":46863,"line_start":97,"line_end":97,"column_start":29,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":61},"to":{"krate":0,"index":30}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":47121,"byte_end":47130,"line_start":106,"line_end":106,"column_start":22,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":47612,"byte_end":47621,"line_start":119,"line_end":119,"column_start":10,"column_end":19},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":47795,"byte_end":47804,"line_start":126,"line_end":126,"column_start":10,"column_end":19},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":48009,"byte_end":48018,"line_start":133,"line_end":133,"column_start":10,"column_end":19},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":48249,"byte_end":48258,"line_start":140,"line_end":140,"column_start":22,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":1873}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":48369,"byte_end":48378,"line_start":146,"line_end":146,"column_start":32,"column_end":41},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":1592}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":48862,"byte_end":48882,"line_start":159,"line_end":159,"column_start":24,"column_end":44},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":36},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":48915,"byte_end":48930,"line_start":160,"line_end":160,"column_start":24,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":42},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":48969,"byte_end":48991,"line_start":162,"line_end":162,"column_start":29,"column_end":51},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":39},"to":{"krate":0,"index":35}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":49029,"byte_end":49044,"line_start":163,"line_end":163,"column_start":29,"column_end":44},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":42},"to":{"krate":0,"index":35}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":49085,"byte_end":49105,"line_start":165,"line_end":165,"column_start":31,"column_end":51},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":36},"to":{"krate":0,"index":30}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":49338,"byte_end":49360,"line_start":174,"line_end":174,"column_start":31,"column_end":53},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":39},"to":{"krate":0,"index":30}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":49600,"byte_end":49615,"line_start":183,"line_end":183,"column_start":31,"column_end":46},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":42},"to":{"krate":0,"index":30}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":49886,"byte_end":49895,"line_start":192,"line_end":192,"column_start":31,"column_end":40},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":50504,"byte_end":50513,"line_start":210,"line_end":210,"column_start":12,"column_end":21},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":51872,"byte_end":51881,"line_start":240,"line_end":240,"column_start":12,"column_end":21},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/context.rs","byte_start":53346,"byte_end":53355,"line_start":272,"line_end":272,"column_start":12,"column_end":21},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":57951,"byte_end":57963,"line_start":40,"line_end":40,"column_start":6,"column_end":18},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":58718,"byte_end":58730,"line_start":72,"line_end":72,"column_start":20,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":1618}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":58852,"byte_end":58864,"line_start":78,"line_end":78,"column_start":22,"column_end":34},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":58954,"byte_end":58966,"line_start":84,"line_end":84,"column_start":16,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":2053}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/ecdh.rs","byte_start":60236,"byte_end":60248,"line_start":125,"line_end":125,"column_start":6,"column_end":18},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":68490,"byte_end":68499,"line_start":34,"line_end":34,"column_start":24,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":227},"to":{"krate":2,"index":5988}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":68688,"byte_end":68697,"line_start":43,"line_end":43,"column_start":23,"column_end":32},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":227},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":68826,"byte_end":68835,"line_start":49,"line_end":49,"column_start":23,"column_end":32},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":227},"to":{"krate":2,"index":7497}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":69641,"byte_end":69650,"line_start":70,"line_end":70,"column_start":24,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":513},"to":{"krate":2,"index":5988}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":69872,"byte_end":69881,"line_start":80,"line_end":80,"column_start":23,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":513},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":70010,"byte_end":70019,"line_start":86,"line_end":86,"column_start":23,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":513},"to":{"krate":2,"index":7497}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":70738,"byte_end":70747,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":73539,"byte_end":73548,"line_start":204,"line_end":204,"column_start":6,"column_end":15},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":78816,"byte_end":78825,"line_start":360,"line_end":360,"column_start":15,"column_end":24},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":513},"to":{"krate":15,"index":94}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":79110,"byte_end":79119,"line_start":373,"line_end":373,"column_start":31,"column_end":40},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":513},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":79268,"byte_end":79277,"line_start":381,"line_end":381,"column_start":29,"column_end":38},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":513},"to":{"krate":26,"index":1212}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":79581,"byte_end":79590,"line_start":392,"line_end":392,"column_start":41,"column_end":50},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":513},"to":{"krate":26,"index":835}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":79801,"byte_end":79811,"line_start":397,"line_end":397,"column_start":53,"column_end":63},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":289},"to":{"krate":26,"index":919}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/key.rs","byte_start":80865,"byte_end":80877,"line_start":426,"line_end":426,"column_start":53,"column_end":65},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":299},"to":{"krate":26,"index":919}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":6814,"byte_end":6823,"line_start":187,"line_end":187,"column_start":21,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":6939,"byte_end":6948,"line_start":193,"line_end":193,"column_start":23,"column_end":32},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":7145,"byte_end":7154,"line_start":203,"line_end":203,"column_start":23,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":7497}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":7756,"byte_end":7775,"line_start":222,"line_end":222,"column_start":6,"column_end":25},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":8785,"byte_end":8794,"line_start":259,"line_end":259,"column_start":6,"column_end":15},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":13829,"byte_end":13838,"line_start":401,"line_end":401,"column_start":15,"column_end":24},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":549},"to":{"krate":15,"index":94}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":14120,"byte_end":14129,"line_start":413,"line_end":413,"column_start":31,"column_end":40},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":14281,"byte_end":14290,"line_start":422,"line_end":422,"column_start":29,"column_end":38},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":549},"to":{"krate":26,"index":1212}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":14599,"byte_end":14608,"line_start":434,"line_end":434,"column_start":41,"column_end":50},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":549},"to":{"krate":26,"index":835}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":15282,"byte_end":15289,"line_start":453,"line_end":453,"column_start":6,"column_end":13},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":15866,"byte_end":15873,"line_start":472,"line_end":472,"column_start":40,"column_end":47},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":16716,"byte_end":16721,"line_start":503,"line_end":503,"column_start":6,"column_end":11},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":17556,"byte_end":17561,"line_start":520,"line_end":520,"column_start":23,"column_end":28},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":606},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":17729,"byte_end":17734,"line_start":527,"line_end":527,"column_start":28,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":606},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":18097,"byte_end":18106,"line_start":540,"line_end":540,"column_start":34,"column_end":43},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":18242,"byte_end":18251,"line_start":542,"line_end":542,"column_start":34,"column_end":43},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":18291,"byte_end":18300,"line_start":545,"line_end":545,"column_start":32,"column_end":41},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":1618}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":18383,"byte_end":18402,"line_start":549,"line_end":549,"column_start":18,"column_end":37},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":1873}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":18564,"byte_end":18583,"line_start":558,"line_end":558,"column_start":20,"column_end":39},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":1618}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":18729,"byte_end":18748,"line_start":564,"line_end":564,"column_start":22,"column_end":41},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":18838,"byte_end":18857,"line_start":570,"line_end":570,"column_start":16,"column_end":35},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":2053}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":18967,"byte_end":18986,"line_start":577,"line_end":577,"column_start":13,"column_end":32},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":19015,"byte_end":19024,"line_start":579,"line_end":579,"column_start":25,"column_end":34},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":19059,"byte_end":19068,"line_start":581,"line_end":581,"column_start":27,"column_end":36},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":19271,"byte_end":19280,"line_start":590,"line_end":590,"column_start":33,"column_end":42},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":19447,"byte_end":19456,"line_start":596,"line_end":596,"column_start":18,"column_end":27},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":21154,"byte_end":21163,"line_start":634,"line_end":634,"column_start":18,"column_end":27},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/psyto/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.17.2/src/lib.rs","byte_start":22543,"byte_end":22552,"line_start":667,"line_end":667,"column_start":23,"column_end":32},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":375},"to":{"krate":4294967295,"index":4294967295}}]}